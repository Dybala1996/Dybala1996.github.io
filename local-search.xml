<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>代码大赛DataSevice</title>
    <link href="/2021/09/29/%E4%BB%A3%E7%A0%81%E5%A4%A7%E8%B5%9BDataSevice/"/>
    <url>/2021/09/29/%E4%BB%A3%E7%A0%81%E5%A4%A7%E8%B5%9BDataSevice/</url>
    
    <content type="html"><![CDATA[<p><strong>服务器地址</strong>：</p><p><strong>redis:</strong></p><p>域名： sunseason.xyz</p><p>端口： 50001</p><p>密码： 123456yun</p><p><strong>MySQL:</strong></p><p>域名： sunseason.xyz</p><p>端口： 3306</p><p>账号： admin</p><p>密码： admin</p><p>数据库名： data_server</p><hr><p><strong>Go连接mysql, redis测试代码：</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br>    <span class="hljs-string">&quot;database/sql&quot;</span><br>    <span class="hljs-string">&quot;fmt&quot;</span><br>    _ <span class="hljs-string">&quot;github.com/go-sql-driver/mysql&quot;</span><br>    <span class="hljs-string">&quot;github.com/garyburd/redigo/redis&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><br>    db,_:=sql.Open(<span class="hljs-string">&quot;mysql&quot;</span>,<span class="hljs-string">&quot;admin:admin@(sunseason.xyz:3306)/data_server&quot;</span>)<br>    err :=db.Ping()<br>    <span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span>&#123;<br>        fmt.Println(<span class="hljs-string">&quot;failed to connect mysql!!!&quot;</span>)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        fmt.Println(<span class="hljs-string">&quot;success to connect mysql!!!&quot;</span>)<br>    &#125;<br>    <span class="hljs-keyword">defer</span> db.Close()<br><br>    c, err := redis.Dial(<span class="hljs-string">&quot;tcp&quot;</span>, <span class="hljs-string">&quot;sunseason.xyz:50001&quot;</span>)<br>    <span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>        fmt.Println(<span class="hljs-string">&quot;failed to connect redis!!!&quot;</span>)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        fmt.Println(<span class="hljs-string">&quot;success to connect redis!!!&quot;</span>)<br>    &#125;<br>    <span class="hljs-keyword">defer</span> c.Close()<br>&#125;<br></code></pre></td></tr></table></figure><hr><p><strong>本地连接mysql, redis命令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#mysql</span><br>mysql -uadmin -padmin -h  sunseason.xyz -P 3306<br><br><span class="hljs-comment">#redis</span><br>redis-cli -h sunseason.xyz -p 50001 -a 123456yun<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/09/23/hello-world/"/>
    <url>/2021/09/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ceshi</title>
    <link href="/2021/09/19/ceshi/"/>
    <url>/2021/09/19/ceshi/</url>
    
    <content type="html"><![CDATA[<p><img src="/Users/dy/Blog/source/_posts/ceshi/p1.png" alt="p1"></p><img src="/2021/09/19/ceshi/p1.png" class>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo搭建博客记录</title>
    <link href="/2021/09/19/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/09/19/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>记录了使用Hexo框架搭建个人博客的流程。</p><span id="more"></span><h1 id="需要的依赖"><a href="#需要的依赖" class="headerlink" title="需要的依赖"></a>需要的依赖</h1><ul><li>git</li><li>Node.js</li><li>npm</li><li>cnpm (npm的国内镜像源)</li><li>hexo</li></ul><h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>太简单了，略。</p><p>但是别忘了配置一下git邮箱和用户名，否则后续往远端push代码时可能会产生错误。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.email xxx<br>git config --global user.name xxx<br></code></pre></td></tr></table></figure><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>直接去<a href="https://nodejs.org/">官网</a>下就好了，安装完后会自动包含npm工具。</p><h2 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装cnpm</h2><p>单纯为了加快下载速度，使用国内的镜像源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g cnpm --registry=http://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h2 id="安装Hexo框架"><a href="#安装Hexo框架" class="headerlink" title="安装Hexo框架"></a>安装Hexo框架</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install -g hexo-cli<br></code></pre></td></tr></table></figure><h2 id="创建工作目录"><a href="#创建工作目录" class="headerlink" title="创建工作目录"></a>创建工作目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkdir BLOG<br><span class="hljs-built_in">cd</span> BLOG<br></code></pre></td></tr></table></figure><h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><p>可能会报权限错误，切到root用户执行即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo hexo init<br></code></pre></td></tr></table></figure><h2 id="部署到GitHub仓库"><a href="#部署到GitHub仓库" class="headerlink" title="部署到GitHub仓库"></a>部署到GitHub仓库</h2><p>创建一个GitHub仓库，要注意的是仓库名称必须是<strong>YourGitHubName.github.io</strong></p><p>在工作根目录BLOG中，编辑_config.yml文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">----<br>#配置_config.yml <br>-----<br># Deployment<br>## Docs: https://hexo.io/docs/deployment.html<br>deploy:<br>  type: git<br> repo: 这里加你的GitHub仓库地址<br>  branch: master<br>-----<br></code></pre></td></tr></table></figure><p>部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><h1 id="产生的问题"><a href="#产生的问题" class="headerlink" title="产生的问题"></a>产生的问题</h1><ol><li><p>部署到github时连接github超时</p><p>解决办法：开梯子。</p></li></ol><img src="/2021/09/19/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/p1.png" class><p>&nbsp;</p><ol start="2"><li><p>部署到github使用账号密码登陆时，报错。原因在于github从2021年8月13就开始使用token登陆，好像是为了提高安全性啥的。</p><p>解决办法：不要用自己的github密码登陆，直接使用tokens作为密码来登录。<a href="https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token">创建token的方法</a></p></li></ol><p>&nbsp;</p><img src="/2021/09/19/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/p2.png" class><ol start="3"><li>在文章中插入图片后无法显示。原因在于引用的图片路径不对。<br>&nbsp;<img src="/2021/09/19/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/p3.png" class>&nbsp;<br>可以打开文章网址页面，使用F12查看文章中图片引用的路径，发现路径是错的。<br>&nbsp;<img src="/2021/09/19/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/p4.png" class>&nbsp;<img src="/2021/09/19/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/p5.png" class>&nbsp;<br>从github中仓库可以看到，在博客中的图片经过hexo到处理实际上是上传到了如下位置<br>&nbsp;<img src="/2021/09/19/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/p6.png" class>&nbsp;<br>​    解决办法：首先要安装一个插件，这个插件安装后当使用hexo new一篇新文章时，会在文章目录下新建一个与文章名字相同的文件夹用来存储文章中引用的图片，并且可以将引用的图片路径自动转换为推送到github后的图片所处的仓库路径地址。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install https://github.com/CodeFalling/hexo-asset-image --save<br></code></pre></td></tr></table></figure><p>修改插件内容，这步必须做，否则后续图片到路径前会多出来一个/.io 路径，同样会导致图片加载不出来。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs text">&#x27;use strict&#x27;;<br>var cheerio = require(&#x27;cheerio&#x27;);<br><br>// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string<br>function getPosition(str, m, i) &#123;<br>  return str.split(m, i).join(m).length;<br>&#125;<br><br>var version = String(hexo.version).split(&#x27;.&#x27;);<br>hexo.extend.filter.register(&#x27;after_post_render&#x27;, function(data)&#123;<br>  var config = hexo.config;<br>  if(config.post_asset_folder)&#123;<br>    var link = data.permalink;<br>if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)<br>   var beginPos = getPosition(link, &#x27;/&#x27;, 1) + 1;<br>else<br>   var beginPos = getPosition(link, &#x27;/&#x27;, 3) + 1;<br>// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.<br>var endPos = link.lastIndexOf(&#x27;/&#x27;) + 1;<br>    link = link.substring(beginPos, endPos);<br><br>    var toprocess = [&#x27;excerpt&#x27;, &#x27;more&#x27;, &#x27;content&#x27;];<br>    for(var i = 0; i &lt; toprocess.length; i++)&#123;<br>      var key = toprocess[i];<br> <br>      var $ = cheerio.load(data[key], &#123;<br>        ignoreWhitespace: false,<br>        xmlMode: false,<br>        lowerCaseTags: false,<br>        decodeEntities: false<br>      &#125;);<br><br>      $(&#x27;img&#x27;).each(function()&#123;<br>if ($(this).attr(&#x27;src&#x27;))&#123;<br>// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.<br>var src = $(this).attr(&#x27;src&#x27;).replace(&#x27;\\&#x27;, &#x27;/&#x27;);<br>if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;<br>   !/^\s*\//.test(src)) &#123;<br>  // For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.<br>  // In addition, to support multi-level local directory.<br>  var linkArray = link.split(&#x27;/&#x27;).filter(function(elem)&#123;<br>return elem != &#x27;&#x27;;<br>  &#125;);<br>  var srcArray = src.split(&#x27;/&#x27;).filter(function(elem)&#123;<br>return elem != &#x27;&#x27; &amp;&amp; elem != &#x27;.&#x27;;<br>  &#125;);<br>  if(srcArray.length &gt; 1)<br>srcArray.shift();<br>  src = srcArray.join(&#x27;/&#x27;);<br>  $(this).attr(&#x27;src&#x27;, config.root + link + src);<br>  console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);<br>&#125;<br>&#125;else&#123;<br>console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);<br>console.info&amp;&amp;console.info($(this));<br>&#125;<br>      &#125;);<br>      data[key] = $.html();<br>    &#125;<br>  &#125;<br>&#125;);<br><br></code></pre></td></tr></table></figure><p>修改_config.yml中的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">post_asset_folder: true<br></code></pre></td></tr></table></figure><p>此后，在文章中插入图片时不能采用markdown的语法，使用如下方式插入图片，虽然不能在markdown中预览，但最终是可以在你的文章页面中出现的。注意：example.jpg是在文章的图片存储目录中，也就是与文章所处统一路径的同名文件夹下，前面不需要加任何路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&#123;% asset_image example.jpg %&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
